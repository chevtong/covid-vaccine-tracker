{"version":3,"sources":["components/Selections.js","components/RegionChart.js","components/TotalNumber.js","components/FetchAPI.js","components/AgeChart.js","components/GenderChart.js","components/DefaultChart.js","img/vaccine.png","App.js","index.js"],"names":["Selections","setCategory","className","onChange","e","currentTarget","value","RegionChart","data","reducer","getCityData","city","dose","filter","round","REGION","DOSE","BrusselsFirstDose","reduce","BrusselsSecondDose","WallionaFirstDose","WallionaSecondDose","FlandersFirstDose","FlandersSecondDose","OstbelgienFirstDose","OstbelgienSecondDose","DoughnutChart","color1","color2","firstDose","SecondDose","region","labels","datasets","backgroundColor","options","legend","display","title","text","TotalNumber","getDoseData","FirstDosePeople","SecondDosePeople","start","end","duration","separator","FetchAPI","a","axios","get","console","log","AgeChart","getAgeData","age","AGEGROUP","age0","age18","age35","age45","age55","age65","age75","age85","label","borderWidth","animation","scales","yAxes","ticks","callback","index","values","xAxes","GenderChart","getGendereData","gender","SEX","male","female","DefaultChart","array","dateArray","map","DATE","FirstDoseArray","SecondDoseArray","getCountPerDay","doseArray","newArray","acc","item","COUNT","Object","keys","key","date","count","indexOf","day","borderColor","fill","App","useState","setData","category","useEffect","fetching","cur","src","vaccine","alt","xmlns","viewBox","fill-opacity","d","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed238287.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Selections({ setCategory }) {\r\n  return (\r\n    <div className=\"select-container\">\r\n      <select onChange={(e) => setCategory(e.currentTarget.value)}>\r\n        <option value=\"all\">Show By Catergories</option>\r\n        <option value=\"region\">By Region</option>\r\n        <option value=\"age\">By Age</option>\r\n        <option value=\"gender\">By Gender</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Selections;\r\n","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction RegionChart({ data, reducer }) {\r\n\r\n  const getCityData = (city, dose) => {\r\n    let cityArray = data.filter(\r\n      (round) => round.REGION === city && round.DOSE === dose\r\n    );\r\n    return cityArray;\r\n  };\r\n\r\n  const BrusselsFirstDose = getCityData(\"Brussels\", \"A\").reduce(reducer, 0);\r\n  const BrusselsSecondDose = getCityData(\"Brussels\", \"B\").reduce(reducer, 0);\r\n  const WallionaFirstDose = getCityData(\"Wallonia\", \"A\").reduce(reducer, 0);\r\n  const WallionaSecondDose = getCityData(\"Wallonia\", \"B\").reduce(reducer, 0);\r\n  const FlandersFirstDose = getCityData(\"Flanders\", \"A\").reduce(reducer, 0);\r\n  const FlandersSecondDose = getCityData(\"Flanders\", \"B\").reduce(reducer, 0);\r\n  const OstbelgienFirstDose = getCityData(\"Ostbelgien\", \"A\").reduce(reducer, 0);\r\n  const OstbelgienSecondDose = getCityData(\"Ostbelgien\", \"B\").reduce(reducer, 0);\r\n\r\n  const DoughnutChart = (color1, color2, firstDose, SecondDose, region) => {\r\n    return (\r\n      <Doughnut\r\n        data={{\r\n          labels: [\"dose 1\", \"dose2\"],\r\n          datasets: [\r\n            {\r\n\r\n              backgroundColor: [color1, color2],\r\n              data: [firstDose, SecondDose],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          title: {\r\n            display: true,\r\n            text: `Total vaccinated population in ${region}: ${\r\n              firstDose + SecondDose\r\n            }`,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"doughnut-chart-container\">\r\n      <div className=\"doughnut-chart\">\r\n        {DoughnutChart(\r\n          \"#add2c9\",\r\n          \"#5ea3a3\",\r\n          BrusselsFirstDose,\r\n          BrusselsSecondDose,\r\n          \"Brussels\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"doughnut-chart\">\r\n        {DoughnutChart(\r\n          \"#BDE284\",\r\n          \"#84C77A\",\r\n          WallionaFirstDose,\r\n          WallionaSecondDose,\r\n          \"Wallonia\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"doughnut-chart\">\r\n        {DoughnutChart(\r\n          \"#BDE284\",\r\n          \"#84C77A\",\r\n          FlandersFirstDose,\r\n          FlandersSecondDose,\r\n          \"Flanders\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"doughnut-chart\">\r\n        {DoughnutChart(\r\n          \"#add2c9\",\r\n          \"#5ea3a3\",\r\n          OstbelgienFirstDose,\r\n          OstbelgienSecondDose,\r\n          \"Ostbelgien\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegionChart;\r\n","import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\n\r\nfunction TotalNumber({ data,reducer, getDoseData}) {\r\n\r\n  const FirstDosePeople = getDoseData(\"A\").reduce(reducer, 0);\r\n  const SecondDosePeople = getDoseData(\"B\").reduce(reducer, 0);\r\n\r\n  return data ? (\r\n    <div className=\"container-totalNum\">\r\n      <div className=\"board overall\">\r\n        <h2>Overall Vaccinated Population</h2>\r\n        <CountUp\r\n          className=\"count-up \"\r\n          start={0}\r\n          end={FirstDosePeople + SecondDosePeople}\r\n          duration={4}\r\n          separator=\",\"\r\n        />\r\n      </div>\r\n      <div className=\"board\">\r\n        <h3>Population received first dose</h3>\r\n        <CountUp\r\n          className=\"count-up\"\r\n          start={0}\r\n          end={FirstDosePeople}\r\n          duration={4}\r\n          separator=\",\"\r\n        />\r\n      </div>\r\n      <div className=\"board\">\r\n        <h3>Population received second dose</h3>\r\n        <CountUp\r\n          className=\"count-up\"\r\n          start={0}\r\n          end={SecondDosePeople}\r\n          duration={4}\r\n          separator=\",\"\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default TotalNumber;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://epistat.sciensano.be/Data/COVID19BE_VACC.json\";\r\n\r\nexport const FetchAPI = async () => {\r\n  try {\r\n    const { data } = await axios.get(url);\r\n    \r\n    console.log(data);\r\n\r\n    return data;\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction AgeChart({ data, reducer }) {\r\n  const getAgeData = (age) => {\r\n    let ageArray = data.filter((round) => round.AGEGROUP === age);\r\n    return ageArray;\r\n  };\r\n\r\n  const age0 = getAgeData(\"0-17\").reduce(reducer, 0);\r\n  const age18 = getAgeData(\"18-34\").reduce(reducer, 0);\r\n  const age35 = getAgeData(\"35-44\").reduce(reducer, 0);\r\n  const age45 = getAgeData(\"45-54\").reduce(reducer, 0);\r\n  const age55 = getAgeData(\"55-64\").reduce(reducer, 0);\r\n  const age65 = getAgeData(\"65-74\").reduce(reducer, 0);\r\n  const age75 = getAgeData(\"75-84\").reduce(reducer, 0);\r\n  const age85 = getAgeData(\"85+\").reduce(reducer, 0);\r\n\r\n  return (\r\n    <div className=\"age-chart-container\">\r\n      <Bar\r\n        data={{\r\n          labels: [\r\n            \"0-17\",\r\n            \"18-34\",\r\n            \"35-44\",\r\n            \"45-54\",\r\n            \"55-64\",\r\n            \"65-74\",\r\n            \"75-84\",\r\n            \"85+\",\r\n          ],\r\n          datasets: [\r\n            {\r\n              label: \"Vaccinated Population\",\r\n              backgroundColor: [\r\n                \"#BDE284\",\r\n                \"#84C77A\",\r\n                \"#BDE284\",\r\n                \"#84C77A\",\r\n                \"#BDE284\",\r\n                \"#84C77A\",\r\n                \"#BDE284\",\r\n                \"#84C77A\",\r\n              ],\r\n\r\n              data: [age0, age18, age35, age45, age55, age65, age75, age85],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          animation: { display: true, duration: 2000 },\r\n          legend: { display: false },\r\n          title: {\r\n            display: true,\r\n            text: \"Vaccinated Population According To Age Groups In Belgium\",\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  // Include a dollar sign in the ticks\r\n                  callback: function (value, index, values) {\r\n                    return value + \" persons\";\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            xAxes: [\r\n              {\r\n                ticks: {\r\n                  // Include a dollar sign in the ticks\r\n                  callback: function (value, index, values) {\r\n                    return \"Age \" + value;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AgeChart;\r\n","import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction GenderChart({ data, reducer }) {\r\n  const getGendereData = (gender) => {\r\n    let genderArray = data.filter((round) => round.SEX === gender);\r\n    return genderArray;\r\n  };\r\n\r\n  const male = getGendereData(\"M\").reduce(reducer, 0);\r\n  const female = getGendereData(\"F\").reduce(reducer, 0);\r\n\r\n  return (\r\n    <div className=\"gender-chart-container\">\r\n      <Pie\r\n        data={{\r\n          labels: [\"male\", \"female\"],\r\n          datasets: [\r\n            {\r\n              backgroundColor: [\"#85DAF9\", \"#BDE284\"],\r\n              data: [male, female],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          title: {\r\n            display: true,\r\n            text: `Total vaccinated population in different genders`,\r\n          },\r\n        }}\r\n      />{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenderChart;\r\n","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\nfunction DefaultChart({data, getDoseData}) {\r\n    \r\n    const dateArray = data.map((round) => round.DATE)\r\n    const FirstDoseArray = getDoseData(\"A\");\r\n    const SecondDoseArray = getDoseData(\"B\");\r\n\r\n    const removeDuplicate = (array) =>{\r\n        return array.filter((value,index) => array.indexOf(value) === index)\r\n    }\r\n\r\n\r\nconst getCountPerDay = (doseArray) =>{\r\n    const newArray = doseArray.reduce((acc, item) => ({\r\n        ...acc,\r\n        [item.DATE]: (acc[item.DATE] || 0) + item.COUNT\r\n      }) , {})\r\n\r\n      const countArray = Object.keys(newArray).map(key => ({date: key, count: newArray[key]}))\r\n\r\n      return countArray\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"default-chart\">\r\n           <Line\r\n            data={{\r\n                labels: removeDuplicate(dateArray),\r\n                datasets: [{\r\n                    data:getCountPerDay(FirstDoseArray).map((day) => (day.count)),\r\n                    label: \"Dose 1\",\r\n                    borderColor: '#5ea3a3', \r\n                    backgroundColor: '#add2c9',\r\n                    fill:true,\r\n                },{\r\n                    data:getCountPerDay(SecondDoseArray).map((day) => (day.count)),\r\n                    label: \"Dose 2\",\r\n                    borderColor: '#404969', \r\n                    backgroundColor: '#bde4f4',\r\n                    fill:true\r\n                }]\r\n            }}\r\n            options={{\r\n               // animation: {display: true,duration: 2000},\r\n                legend: { display: true },\r\n                title: {\r\n                  display: true,\r\n                  text: \"Vaccinated People According To Dates\",\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            // Include a dollar sign in the ticks\r\n                            callback: function(value, index, values) {\r\n                                return value + ' persons';\r\n                            }\r\n                        }\r\n                    }]\r\n                }\r\n            \r\n              }}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DefaultChart\r\n","export default __webpack_public_path__ + \"static/media/vaccine.b5f31bec.png\";","import React, { useEffect, useState } from \"react\";\n\nimport Selections from \"./components/Selections\";\nimport RegionChart from \"./components/RegionChart\";\nimport TotalNumber from \"./components/TotalNumber\";\nimport { FetchAPI } from \"./components/FetchAPI\";\nimport AgeChart from \"./components/AgeChart\";\nimport GenderChart from \"./components/GenderChart\";\nimport DefaultChart from \"./components/DefaultChart\";\n\nimport \"./App.css\";\nimport vaccine from \"./img/vaccine.png\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [category, setCategory] = useState(\"all\");\n\n  useEffect(() => {\n    const fetching = async () => {\n      setData(await FetchAPI());\n    };\n    fetching();\n  }, []);\n\n  const reducer = (acc, cur) => {\n    return acc + cur.COUNT;\n  };\n  const getDoseData = (dose) => {\n    let doseArray = data.filter((round) => round.DOSE === dose);\n    return doseArray;\n  };\n\n  return (\n    <div className=\"App\">\n\n      <h1 className=\"landing-title\">COVID Vaccination in Belgium</h1>\n\n      <div className=\"landing-container\">\n        <TotalNumber data={data} reducer={reducer} getDoseData={getDoseData} />\n        <img src={vaccine} alt=\"icon\" />\n      </div>\n\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n        <path\n          fill=\"#276678\"\n          fill-opacity=\"1\"\n          d=\"M0,224L40,208C80,192,160,160,240,133.3C320,107,400,85,480,69.3C560,53,640,43,720,32C800,21,880,11,960,26.7C1040,43,1120,85,1200,106.7C1280,128,1360,128,1400,128L1440,128L1440,0L1400,0C1360,0,1280,0,1200,0C1120,0,1040,0,960,0C880,0,800,0,720,0C640,0,560,0,480,0C400,0,320,0,240,0C160,0,80,0,40,0L0,0Z\"\n        ></path>\n      </svg>\n\n      <Selections setCategory={setCategory} />\n\n      {category === \"all\" ? (\n        <DefaultChart data={data} getDoseData={getDoseData} />\n      ) : null}\n\n      {category === \"region\" ? (\n        <RegionChart data={data} reducer={reducer} />\n      ) : null}\n\n      {category === \"age\" ? <AgeChart data={data} reducer={reducer} /> : null}\n\n      {category === \"gender\" ? (\n        <GenderChart data={data} reducer={reducer} />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}